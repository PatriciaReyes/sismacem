DROP DATABASE MIT_DB;

CREATE DATABASE MIT_DB;

USE MIT_DB;

SET FOREIGN_KEY_CHECKS = 0;

CREATE TABLE USUARI0_REGISTRADO(
    CI VARCHAR(8) NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL,
    APELLIDO VARCHAR(100) NOT NULL,
    TELEFONO VARCHAR(13),
    CORREO VARCHAR(100),
    OCUPACION VARCHAR(100),

    PRIMARY KEY (CI)
);

CREATE TABLE PARTICIPA(
    CI VARCHAR(8) NOT NULL,
    ID_PLAN INT(5) NOT NULL,
    ROL VARCHAR(100) NOT NULL,

    PRIMARY KEY (CI,ID_PLAN),
    FOREIGN KEY (CI) REFERENCES USUARIO_REGISTRADO(CI),
    FOREIGN KEY (ID_PLAN) REFERENCES PLAN(ID_PLAN),
    CONSTRAINT CHK_ID_PLAN_PARTICIPA CHECK (ID_PLAN > 0)
);

CREATE TABLE PLAN(
    ID_PLAN INT(5) NOT NULL AUTO_INCREMENT,
    NOMBRE VARCHAR(1000) NOT NULL,
    FECHA_INICIO DATE NOT NULL,
    FECHA_FIN DATE NOT NULL,
    TIPO_DESASTRE VARCHAR(1000) NOT NULL,
    TIPO_FASE VARCHAR(1000) NOT NULL,
    DESCRIPCION VARCHAR(1000),
    ALCANCE VARCHAR(1000),
    OBJETIVOS VARCHAR(1000),
    COSTO_TOTAL DECIMAL(23,2),
    COSTO_ESTIMADO DECIMAL(23,2),

    PRIMARY KEY (ID_PLAN),
    CONSTRAINT CHK_ID_PLAN CHECK (ID_PLAN > 0),
    CONSTRAINT CHK_COSTO_TOTAL CHECK (COSTO_TOTAL > 0),
    CONSTRAINT CHK_COSTO_ESTIMADO CHECK (COSTO_ESTIMADO > 0),
    CONSTRAINT CHK_FECHA_INICIO_PLAN CHECK (FECHA_INICIO >= CURDATE()),
    CONSTRAINT CHK_FECHAS_PLAN CHECK (FECHA_INICIO <= FECHA_FIN)
);

CREATE TABLE ETAPA(
    ID_PLAN INT(5) NOT NULL,
    NUMERO_ETAPA INT(5) NOT NULL,
    NOMBRE VARCHAR(1000) NOT NULL,
    TIEMPO_ESTIMADO VARCHAR(100),
    TIEMPO_REAL VARCHAR(100),
    COSTO_TOTAL_ETAPA DECIMAL(23,2),
    COSTO_ESTIMADO_ETAPA DECIMAL(23,2),
    DESCRIPCION VARCHAR(1000),
    ESTADO VARCHAR(100),

    PRIMARY KEY (ID_PLAN,NUMERO_ETAPA),
    FOREIGN KEY (ID_PLAN) REFERENCES PLAN(ID_PLAN),
    CONSTRAINT CHK_ID_PLAN_ETAPA CHECK (ID_PLAN > 0),
    CONSTRAINT CHK_NUMERO_ETAPA CHECK (NUMERO_ETAPA > 0),
    CONSTRAINT CHK_COSTO_ESTIMADO_ETAPA CHECK (COSTO_ESTIMADO_ETAPA > 0),
    CONSTRAINT CHK_COSTO_TOTAL_ETAPA CHECK (COSTO_TOTAL_ETAPA > 0)
);

CREATE TABLE ACTIVIDAD(
    ID_PLAN INT(5) NOT NULL,
    NUMERO_ETAPA INT(5) NOT NULL,
    NUMERO_ACTIVIDAD INT(5) NOT NULL,
    NOMBRE VARCHAR(1000) NOT NULL,
    FECHA DATE NOT NULL,
    LUGAR VARCHAR(1000) NOT NULL,
    COSTO_ESTIMADO_ACTIVIDAD DECIMAL(23,2),
    COSTO_TOTAL_ACTIVIDAD DECIMAL(23,2),
    DESCRIPCION VARCHAR(1000),
    ESTADO VARCHAR(100),

    PRIMARY KEY (ID_PLAN,NUMERO_ETAPA,NUMERO_ACTIVIDAD),
    FOREIGN KEY (ID_PLAN,NUMERO_ETAPA) REFERENCES ETAPA(ID_PLAN,NUMERO_ETAPA),
    FOREIGN KEY (ID_PLAN) REFERENCES PLAN(ID_PLAN),
    CONSTRAINT CHK_ID_PLAN_ACTIVIDAD CHECK (ID_PLAN > 0),
    CONSTRAINT CHK_NUMERO_ETAPA CHECK (NUMERO_ETAPA > 0),
    CONSTRAINT CHK_NUMERO_ACTIVIDAD CHECK (NUMERO_ACTIVIDAD > 0),
    CONSTRAINT CHK_COSTO_ESTIMADO_ACTIVIDAD CHECK (COSTO_ESTIMADO_ACTIVIDAD > 0),
    CONSTRAINT CHK_COSTO_TOTAL_ACTIVIDAD CHECK (COSTO_TOTAL_ACTIVIDAD > 0),
    CONSTRAINT CHK_FECHA_ACTIVIDAD CHECK (FECHA >= CURDATE()),
    CONSTRAINT CHK_FECHAS_ACTIVIDAD CHECK (FECHA_INICIO <= FECHA_FIN)
);

CREATE TABLE JORNADA(
    ID_JORNADA INT(5) NOT NULL AUTO_INCREMENT,
    NOMBRE VARCHAR(1000) NOT NULL,
    FECHA_INICIO DATE NOT NULL,
    FECHA_FIN DATE NOT NULL,
    TIPO_DESASTRE VARCHAR(1000) NOT NULL,
    TIPO_FASE VARCHAR(1000) NOT NULL,
    CORREO_CONTACTO VARCHAR(100) NOT NULL,
    DESCRIPCION VARCHAR(1000),

    PRIMARY KEY (ID_JORNADA),
    CONSTRAINT CHK_ID_JORNADA CHECK (ID_JORNADA > 0),
    CONSTRAINT CHK_FECHA_INICIO_JORNADA CHECK (FECHA_INICIO >= CURDATE()),
    CONSTRAINT CHK_FECHA_FIN_JORNADA CHECK (FECHA_FIN >= CURDATE()),
    CONSTRAINT CHK_FECHAS_JORNADA CHECK (FECHA_INICIO <= FECHA_FIN)
);

CREATE TABLE EVENTO(
    ID_JORNADA INT(5) NOT NULL,
    NOMBRE VARCHAR(100) NOT NULL,
    FECHA DATE NOT NULL,
    HORA VARCHAR(100) NOT NULL,
    LUGAR VARCHAR(100) NOT NULL,
    DESCRIPCION VARCHAR(1000),
    TELEFONO_CONTACTO VARCHAR(1000),

    PRIMARY KEY (ID_JORNADA,NOMBRE,HORA,LUGAR),
    FOREIGN KEY (ID_JORNADA) REFERENCES JORNADA(ID_JORNADA),
    CONSTRAINT CHK_ID_JORNADA_EVENTO CHECK (ID_JORNADA > 0)
);

SET FOREIGN_KEY_CHECKS = 1;
